<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SmdRmUiRAAAAAElFTkSuQmCC
</value>
  </data>
</root>