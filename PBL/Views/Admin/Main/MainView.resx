<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHome.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>